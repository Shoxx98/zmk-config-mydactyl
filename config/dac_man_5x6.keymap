#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define DEFAULT 0
#define FN 1
#define NUM 1


/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp GRAVE   &kp N2     &kp N3    &kp N4     &kp N5     &kp N6       &kp HOME                            &kp PSCRN      &kp N7     &kp N8     &kp N9     &kp N0     &kp MINUS      &kp EQUAL
&kp N1      &kp Q      &kp W     &kp E      &kp R      &kp T        &kp INSERT                          &kp PAGE_UP    &kp Y      &kp U      &kp I      &kp O      &kp P          &bootloader
&kp TAB     &kp A      &kp S     &kp D      &kp F      &kp G        &kp END                             &kp PAGE_DOWN  &kp H      &kp J      &kp K      &kp L      &kp SEMICOLON  &kp APOSTROPHE
&kp ESC     &kp Z      &kp X     &kp C      &kp V      &kp B                                                           &kp N      &kp M      &kp COMMA  &kp DOT    &kp FSLH       &kp BSPC
                       &kp LEFT  &kp RIGHT                                                                                                   &kp LBKT   &kp RBKT
                                                       &kp ENTER    &kp SPACE   &kp RCTRL       &kp UP  &kp CAPS   &kp RCTRL
                                                       &kp LWIN     &kp LSHIFT  &kp LALT        &kp DEL &kp RSHIFT  &kp RWIN
            >;
        };

        FN{
            bindings = <
&trans  &kp F2  &kp F3  &kp F4  &kp F5  &kp F6  &trans                      &trans  &kp F7  &kp F8  &kp F9  &kp F10  &kp F11  &kp F12
&kp F1  &trans  &trans  &kp UP  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &kp LEFT  &kp DOWN  &kp RIGHT  &trans  &trans               &trans  &bt BT_SEL1  &bt BT_SEL2  &bt BT_SEL3  &bt BT_SEL4  &bt BT_SEL5  &trans
&bootloader  &trans  &trans  &trans  &trans  &trans                                 &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans                                                      &bt BT_CLR  &out OUT_TOG
                                        &trans  &trans  &trans      &trans  &trans  &trans
                                        &trans  &trans  &trans      &trans  &trans  &trans
            >;
        };

        num{
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans                      &trans  &trans  &kp KP_NUM  &kp KP_SLASH  &kp KP_ASTERISK  &kp KP_MINUS  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans                      &trans  &trans  &kp KP_7  &kp KP_8  &kp KP_9  &kp KP_PLUS  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans                      &trans  &trans  &kp KP_4  &kp KP_5  &kp KP_6  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                                      &trans  &kp KP_1  &kp KP_2  &kp KP_3  &trans  &trans
                        &trans  &trans                                                      &kp KP_0  &kp KP_DOT
                                        &trans  &trans  &trans      &trans  &trans  &trans
                                        &trans  &trans  &trans      &trans  &trans  &trans
            >;
        };

//         FN{
//             bindings = <
// &trans  &trans  &trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans  &trans  &trans
// &trans  &trans  &trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans  &trans  &trans
// &trans  &trans  &trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans  &trans  &trans
// &trans  &trans  &trans  &trans  &trans  &trans                                      &trans  &trans  &trans  &trans  &trans  &trans
//                         &trans  &trans                                                      &trans  &trans
//                                         &trans  &trans  &trans      &trans  &trans  &trans
//                                         &trans  &trans  &trans      &trans  &trans  &trans
//             >;
        // };
   };
};
